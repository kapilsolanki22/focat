name: MICA & GRPC Cert Expiry Check (Virtual Terminal)

on:
  workflow_dispatch:  # Allows manual trigger
  schedule:
  - cron: "41 5 * * 1,4"  # Runs daily at 11:30 PM

jobs:

  fetch-and-check-vt-stage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env: [vt-stage, vt-prod]  # Added test and dev
    
    env:
      EXPIRY_THRESHOLD_DAYS: 31  # Set the expiry threshold to 30 days
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          if [ "${{ matrix.env }}" == "vt-stage" ]; then
            echo "GCP_SERVICE_ACCOUNT_KEY=$(echo -n '${{ secrets.GCP_SA_KEY_STAGE }}' | base64 -w0)" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID_STAGE }}" >> $GITHUB_ENV
            echo "SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL_STAGE }}" >> $GITHUB_ENV
          elif [ "${{ matrix.env }}" == "vt-prod" ]; then
            echo "SECRET_NAME=${{ secrets.GCLOUD_SECRET_NAME_VT_STAGE }}" >> $GITHUB_ENV
            echo "GCP_SERVICE_ACCOUNT_KEY=$(echo -n '${{ secrets.GCP_SA_KEY_PROD }}' | base64 -w0)" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID_PROD }}" >> $GITHUB_ENV
            echo "SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL_PROD }}" >> $GITHUB_ENV
          fi
          echo "ENVIRONMENT=${{ matrix.env }}" >> $GITHUB_ENV

      - name: Google Auth (Stage)
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ env.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Setting up Cloud SDK (Stage)
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Fetch Certificate from Google Secrets Manager (Stage)
        run: |
          
          gcloud secrets versions access latest --secret="${{ env.SECRET_NAME }}" --project="${{ env.GCP_PROJECT_ID }}" > /tmp/gcp_certificate.crt

      - name: Check certificate expiry and details (Stage)
        id: check_expiry_gsm
        run: |
          # Extract expiry date
          EXPIRY_DATE=$(openssl x509 -in /tmp/gcp_certificate.crt -noout -enddate | cut -d= -f2)
          EXPIRY_TIMESTAMP=$(date -d "$EXPIRY_DATE" +%s)
          CURRENT_TIMESTAMP=$(date +%s)
          THRESHOLD_TIMESTAMP=$(($CURRENT_TIMESTAMP + ${EXPIRY_THRESHOLD_DAYS}*24*60*60))
          
          # Calculate days remaining
          DAYS_REMAINING=$(( (EXPIRY_TIMESTAMP - CURRENT_TIMESTAMP) / 86400 ))
          
          # Extract DNS name (from SAN if available, otherwise from CN)
          DNS_NAME_STAGE=$(openssl x509 -in /tmp/gcp_certificate.crt -noout -ext subjectAltName | grep -o 'DNS:[^,]*' | cut -d: -f2 | head -n1)
          if [ -z "$DNS_NAME_STAGE" ]; then
            DNS_NAME_STAGE=$(openssl x509 -in /tmp/gcp_certificate.crt -noout -subject | sed -n '/CN/s/^.*CN=//p')
          fi
          
          echo "Expiry Date: $EXPIRY_DATE" && \
          echo "Expiry Timestamp: $EXPIRY_TIMESTAMP" && \
          echo "Current Timestamp: $CURRENT_TIMESTAMP" && \
          echo "Threshold Timestamp: $THRESHOLD_TIMESTAMP" && \
          echo "Days Remaining: $DAYS_REMAINING"
          
          # Set environment variables for Slack message
          echo "STAGE_CERT_NAME=Mica Client Cert (Stage)" >> $GITHUB_ENV
          echo "STAGE_DNS_NAME=$DNS_NAME_STAGE" >> $GITHUB_ENV
          echo "STAGE_DAYS_REMAINING=$DAYS_REMAINING" >> $GITHUB_ENV
          echo "STAGE_EXPIRY_DATE=$EXPIRY_DATE" >> $GITHUB_ENV
          
          # Determine expiration status
          if [ "$EXPIRY_TIMESTAMP" -le "$THRESHOLD_TIMESTAMP" ]; then
            echo "EXPIRING=true" >> $GITHUB_ENV
          else
            echo "EXPIRING=false" >> $GITHUB_ENV
          fi

      - name: Send alert to Slack (Stage)
        if: ${{ env.EXPIRING == 'true' }}
        run: |
          webhook_url = ${{ env.SLACK_WEBHOOK_URL }}
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "*Gateway venu bank Stage* \n*DNS Name*: '"$STAGE_DNS_NAME"' \n*Days Remaining*: '"$STAGE_DAYS_REMAINING"' \n*End Date*: '"$STAGE_EXPIRY_DATE"'"
          }' \
          $webhook_url


